version: '3.5'
services:
  postgres:
    image: timescale/timescaledb-postgis:latest-pg13
    environment: # Below secrets should be matched with the information in `.env` too.
      - POSTGRES_USER=bricker
      - POSTGRES_PASSWORD=brick-demo
      - POSTGRES_DB=brick
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - brick-server-network
    ports:
      - "35432:5432"
    volumes:
      - type: bind
        source: ./docker/init_postgis.sh
        target: /docker-entrypoint-initdb.d/003_init_postgis.sh
        read_only: true
      - ../psqlData:/var/lib/postgresql/data # change the path to yours accordingly
  graphdb:
    image: w1zzard/graphdb-free:9.9.0
    networks:
      - brick-server-network
    ports:
      - "37200:7200"
  mongo:
    image: mongo:4.2.3-bionic
    networks:
      - brick-server-network
    ports:
      - "37017:27017"
  redis:
    image: 'redis:5.0.8'
    command: redis-server --requirepass brick-demo
    networks:
      - brick-server-network
    ports:
      - "36379:6379"
  core:
    image: brick_server:playground
    build:
      context: ..
      dockerfile: ./brick-server-playground/Dockerfile
    restart: on-failure
    volumes:
      - ./brick_server/playground:/root/brick-server-playground/brick_server/playground
      - ../brick-server-minimal/brick_server/minimal:/root/brick-server-minimal/brick_server/minimal
      - ./tests:/root/tests
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9000:9000"
    networks:
      - brick-server-network
      - isolated_nw
    environment:
      - DEBUG=true
      - HOST=core
      - MONGO_HOST=mongo
      - TIMESCALE_HOST=postgres
      - BRICK_HOST=virtuoso
      - GRAPHDB_HOST=graphdb
#      - GRAFANA_HOST=grafana
    depends_on:
      - graphdb
    privileged: true
    command: dockerize -wait http://graphdb:7200/rest/repositories python3 -m brick_server.playground
#    entrypoint: /app/docker/start-reload.sh

networks:
  brick-server-network:
  isolated_nw:
